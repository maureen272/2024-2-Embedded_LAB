###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       04/Oct/2024  14:44:08
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Users\pnu2\Documents\Embedded-WED-02\user\main.c
#    Command line =  
#        -f C:\Users\pnu2\AppData\Local\Temp\EW2D4.tmp
#        (C:\Users\pnu2\Documents\Embedded-WED-02\user\main.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC
#        C:\Users\pnu2\Documents\Embedded-WED-02\Debug\List -o
#        C:\Users\pnu2\Documents\Embedded-WED-02\Debug\Obj --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\pnu2\Documents\Embedded-WED-02\libraries\CMSIS\DeviceSupport\
#        -I
#        C:\Users\pnu2\Documents\Embedded-WED-02\libraries\CMSIS\DeviceSupport\Startup\
#        -I
#        C:\Users\pnu2\Documents\Embedded-WED-02\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\Users\pnu2\Documents\Embedded-WED-02\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I C:\Users\pnu2\Documents\Embedded-WED-02\user\ -I
#        C:\Users\pnu2\Documents\Embedded-WED-02\user\inc\ -Ol -I "C:\Program
#        Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\Core\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        C:\Users\pnu2\Documents\Embedded-WED-02\Debug\List\main.lst
#    Object file  =  C:\Users\pnu2\Documents\Embedded-WED-02\Debug\Obj\main.o
#
###############################################################################

C:\Users\pnu2\Documents\Embedded-WED-02\user\main.c
      1          #include "stm32f10x.h"
      2          
      3          #define RCC_APB2ENR (*(volatile unsigned int *)0x40021018)
      4          
      5          #define GPIOA_CRL (*(volatile unsigned int *)0x40010800)
      6          #define GPIOA_IDR (*(volatile unsigned int *)0x40010808)
      7          
      8          #define GPIOB_CRH (*(volatile unsigned int *)0x40010C04)
      9          #define GPIOB_IDR (*(volatile unsigned int *)0x40010C08)
     10          
     11          #define GPIOC_CRL (*(volatile unsigned int *)0x40011000)
     12          #define GPIOC_CRH (*(volatile unsigned int *)0x40011004)
     13          #define GPIOC_IDR (*(volatile unsigned int *)0x40011008)
     14          #define GPIOC_BSRR (*(volatile unsigned int *)0x40011010)
     15          
     16          #define GPIOD_CRL (*(volatile unsigned int *)0x40011400)
     17          #define GPIOD_BSRR (*(volatile unsigned int *)0x40011410)
     18          #define GPIOD_BRR (*(volatile unsigned int *)0x40011414)
     19          
     20          

   \                                 In section .text, align 2, keep-with-next
     21          void delay()
     22          {
     23              for (int i = 0; i < 10000000; i++);
   \                     delay: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0xE000             B.N      ??delay_0
   \                     ??delay_1: (+1)
   \   00000004   0x1C40             ADDS     R0,R0,#+1
   \                     ??delay_0: (+1)
   \   00000006   0x....             LDR.N    R1,??DataTable1  ;; 0x989680
   \   00000008   0x4288             CMP      R0,R1
   \   0000000A   0xDBFB             BLT.N    ??delay_1
     24          }
   \   0000000C   0x4770             BX       LR               ;; return
     25          

   \                                 In section .text, align 2, keep-with-next
     26          int main(void)
     27          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     28          
     29              // Key 1 PC4
     30              GPIOC_CRL &= 0xFFF0FFFF;
   \   00000002   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40011000
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF430 0x2070      BICS     R0,R0,#0xF0000
   \   0000000A   0x....             LDR.N    R1,??DataTable1_1  ;; 0x40011000
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     31              GPIOC_CRL |= 0x00080000;
   \   0000000E   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40011000
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF450 0x2000      ORRS     R0,R0,#0x80000
   \   00000016   0x....             LDR.N    R1,??DataTable1_1  ;; 0x40011000
   \   00000018   0x6008             STR      R0,[R1, #+0]
     32              // Key 2 PB10
     33              GPIOB_CRH &= 0xFFFFF0FF;
   \   0000001A   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40010c04
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF430 0x6070      BICS     R0,R0,#0xF00
   \   00000022   0x....             LDR.N    R1,??DataTable1_2  ;; 0x40010c04
   \   00000024   0x6008             STR      R0,[R1, #+0]
     34              GPIOB_CRH |= 0x00000800;
   \   00000026   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40010c04
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   0000002E   0x....             LDR.N    R1,??DataTable1_2  ;; 0x40010c04
   \   00000030   0x6008             STR      R0,[R1, #+0]
     35              // Key 3 PC13
     36              GPIOC_CRH &= 0xFF0FFFFF;
   \   00000032   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40011004
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0xF430 0x0070      BICS     R0,R0,#0xF00000
   \   0000003A   0x....             LDR.N    R1,??DataTable1_3  ;; 0x40011004
   \   0000003C   0x6008             STR      R0,[R1, #+0]
     37              GPIOC_CRH |= 0x00800000;
   \   0000003E   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40011004
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000046   0x....             LDR.N    R1,??DataTable1_3  ;; 0x40011004
   \   00000048   0x6008             STR      R0,[R1, #+0]
     38          
     39          
     40              // clock
     41              // PORT A, B, C, D ON
     42              RCC_APB2ENR |= 0x3C;
   \   0000004A   0x....             LDR.N    R0,??DataTable1_4  ;; 0x40021018
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0xF050 0x003C      ORRS     R0,R0,#0x3C
   \   00000052   0x....             LDR.N    R1,??DataTable1_4  ;; 0x40021018
   \   00000054   0x6008             STR      R0,[R1, #+0]
     43          
     44              // Relay Module
     45              // PC8, PC9
     46              GPIOC_CRH &= 0xFFFFFF00;
   \   00000056   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40011004
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x0A00             LSRS     R0,R0,#+8
   \   0000005C   0x0200             LSLS     R0,R0,#+8
   \   0000005E   0x....             LDR.N    R1,??DataTable1_3  ;; 0x40011004
   \   00000060   0x6008             STR      R0,[R1, #+0]
     47              GPIOC_CRH |= 0x00000033;
   \   00000062   0x....             LDR.N    R0,??DataTable1_3  ;; 0x40011004
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0xF050 0x0033      ORRS     R0,R0,#0x33
   \   0000006A   0x....             LDR.N    R1,??DataTable1_3  ;; 0x40011004
   \   0000006C   0x6008             STR      R0,[R1, #+0]
   \   0000006E   0xE00D             B.N      ??main_0
     48          
     49              while (1)
     50              {
     51                  if ((GPIOC_IDR & 0x10) == 0) // Key1
     52                  {
     53                      GPIOC_BSRR |= 0x300; // PC8 set, PC9 set
   \                     ??main_1: (+1)
   \   00000070   0x....             LDR.N    R0,??DataTable1_5  ;; 0x40011010
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0xF450 0x7040      ORRS     R0,R0,#0x300
   \   00000078   0x....             LDR.N    R1,??DataTable1_5  ;; 0x40011010
   \   0000007A   0x6008             STR      R0,[R1, #+0]
     54                      delay();
   \   0000007C   0x.... 0x....      BL       delay
     55                      GPIOC_BSRR |= 0x3000000; // PC8 reset, PC9 reset
   \   00000080   0x....             LDR.N    R0,??DataTable1_5  ;; 0x40011010
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0xF050 0x7040      ORRS     R0,R0,#0x3000000
   \   00000088   0x....             LDR.N    R1,??DataTable1_5  ;; 0x40011010
   \   0000008A   0x6008             STR      R0,[R1, #+0]
     56                  }
   \                     ??main_0: (+1)
   \   0000008C   0x....             LDR.N    R0,??DataTable1_6  ;; 0x40011008
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x06C0             LSLS     R0,R0,#+27
   \   00000092   0xD5ED             BPL.N    ??main_1
     57                  
     58                  else if ((GPIOB_IDR & 0x0400) == 0) // Key2
   \   00000094   0x....             LDR.N    R0,??DataTable1_7  ;; 0x40010c08
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x0540             LSLS     R0,R0,#+21
   \   0000009A   0xD410             BMI.N    ??main_2
     59                  {
     60                      GPIOC_BSRR |= 0x2000100; // PC8 set, PC9 reset
   \   0000009C   0x....             LDR.N    R0,??DataTable1_5  ;; 0x40011010
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xF040 0x7000      ORR      R0,R0,#0x2000000
   \   000000A4   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000A8   0x....             LDR.N    R1,??DataTable1_5  ;; 0x40011010
   \   000000AA   0x6008             STR      R0,[R1, #+0]
     61                      delay();   
   \   000000AC   0x.... 0x....      BL       delay
     62                      GPIOC_BSRR |= 0x3000000; // PC8 reset, PC9 reset
   \   000000B0   0x....             LDR.N    R0,??DataTable1_5  ;; 0x40011010
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0xF050 0x7040      ORRS     R0,R0,#0x3000000
   \   000000B8   0x....             LDR.N    R1,??DataTable1_5  ;; 0x40011010
   \   000000BA   0x6008             STR      R0,[R1, #+0]
   \   000000BC   0xE7E6             B.N      ??main_0
     63                  }
     64                  
     65                  else if ((GPIOC_IDR & 0x2000) == 0) // key 3
   \                     ??main_2: (+1)
   \   000000BE   0x....             LDR.N    R0,??DataTable1_6  ;; 0x40011008
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0x0480             LSLS     R0,R0,#+18
   \   000000C4   0xD4E2             BMI.N    ??main_0
     66                  {
     67                      GPIOC_BSRR |= 0x1000200; // PC8 reset, PC9 set
   \   000000C6   0x....             LDR.N    R0,??DataTable1_5  ;; 0x40011010
   \   000000C8   0x6800             LDR      R0,[R0, #+0]
   \   000000CA   0xF040 0x7080      ORR      R0,R0,#0x1000000
   \   000000CE   0xF450 0x7000      ORRS     R0,R0,#0x200
   \   000000D2   0x....             LDR.N    R1,??DataTable1_5  ;; 0x40011010
   \   000000D4   0x6008             STR      R0,[R1, #+0]
     68                      delay();
   \   000000D6   0x.... 0x....      BL       delay
     69                      GPIOC_BSRR |= 0x3000000; // PC8 reset, PC9 reset
   \   000000DA   0x....             LDR.N    R0,??DataTable1_5  ;; 0x40011010
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0xF050 0x7040      ORRS     R0,R0,#0x3000000
   \   000000E2   0x....             LDR.N    R1,??DataTable1_5  ;; 0x40011010
   \   000000E4   0x6008             STR      R0,[R1, #+0]
   \   000000E6   0xE7D1             B.N      ??main_0
     70                  }
     71              }
     72              return 0;
                     ^
Warning[Pe111]: statement is unreachable
     73          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x00989680         DC32     0x989680

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40011000         DC32     0x40011000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40010C04         DC32     0x40010c04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x40011004         DC32     0x40011004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x40021018         DC32     0x40021018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x40011010         DC32     0x40011010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x40011008         DC32     0x40011008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x40010C08         DC32     0x40010c08

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   delay
       8   main
         8   -> delay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
      14  delay
     232  main

 
 278 bytes in section .text
 
 278 bytes of CODE memory

Errors: none
Warnings: 1
